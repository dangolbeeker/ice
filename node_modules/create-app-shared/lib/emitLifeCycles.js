"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var history_1 = require("./history");
var router_1 = require("./router");
var constants_1 = require("./constants");
var appLifeCycles_1 = require("./appLifeCycles");
var pageLifeCycles_1 = require("./pageLifeCycles");
var env_1 = require("./env");
function emitLifeCycles() {
    if (env_1.isMiniAppPlatform) {
        router_1.default.current = {
            pathname: window.__pageId,
            visibiltyState: true
        };
    }
    else {
        // Get history
        var history_2 = history_1.getHistory();
        var pathname = history_2 && history_2.location ?
            history_2.location.pathname : typeof window !== 'undefined' && window.location.pathname;
        // Set current router
        router_1.default.current = {
            pathname: pathname,
            visibiltyState: true
        };
        // Emit app lifecycle
        appLifeCycles_1.emit(constants_1.LAUNCH);
        appLifeCycles_1.emit(constants_1.SHOW);
        if (history_2 && history_2.listen) {
            // Listen history change
            history_2.listen(function (location) {
                if (location.pathname !== router_1.default.current.pathname) {
                    // Flow router info
                    router_1.default.prev = __assign({}, router_1.default.current);
                    router_1.default.current = {
                        pathname: location.pathname,
                        visibiltyState: true
                    };
                    router_1.default.prev.visibiltyState = false;
                    pageLifeCycles_1.emit(constants_1.HIDE, router_1.default.prev.pathname);
                    pageLifeCycles_1.emit(constants_1.SHOW, router_1.default.current.pathname);
                }
            });
        }
    }
}
exports.default = emitLifeCycles;
