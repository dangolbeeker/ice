"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var appLifeCycles_1 = require("./appLifeCycles");
var constants_1 = require("./constants");
var env_1 = require("./env");
function collectAppLifeCycle(appConfig) {
    var _a = appConfig.app, onLaunch = _a.onLaunch, onShow = _a.onShow, onError = _a.onError, onHide = _a.onHide, onTabItemClick = _a.onTabItemClick;
    // multi-end valid lifecycle
    // Add app lanuch callback
    appLifeCycles_1.addAppLifeCycle(constants_1.LAUNCH, onLaunch);
    // Add app show callback
    appLifeCycles_1.addAppLifeCycle(constants_1.SHOW, onShow);
    // Add app error callback
    appLifeCycles_1.addAppLifeCycle(constants_1.ERROR, onError);
    // Add app hide callback
    appLifeCycles_1.addAppLifeCycle(constants_1.HIDE, onHide);
    // Add tab bar item click callback
    appLifeCycles_1.addAppLifeCycle(constants_1.TAB_ITEM_CLICK, onTabItemClick);
    // Add lifecycle callbacks which only valid in Wechat MiniProgram and ByteDance MicroApp
    if (env_1.isWeChatMiniProgram || env_1.isByteDanceMicroApp) {
        var _b = appConfig.app, onPageNotFound = _b.onPageNotFound, onShareAppMessage = _b.onShareAppMessage;
        // Add global share callback
        appLifeCycles_1.addAppLifeCycle(constants_1.SHARE, onShareAppMessage);
        // Add page not found callback
        appLifeCycles_1.addAppLifeCycle(constants_1.NOT_FOUND, onPageNotFound);
    }
    // Add lifecycle callbacks which only valid in Alibaba MiniApp
    if (env_1.isMiniAppPlatform) {
        var _c = appConfig.app, onShareAppMessage = _c.onShareAppMessage, onUnhandledRejection = _c.onUnhandledRejection;
        // Add global share callback
        appLifeCycles_1.addAppLifeCycle(constants_1.SHARE, onShareAppMessage);
        // Add unhandledrejection callback
        appLifeCycles_1.addAppLifeCycle(constants_1.UNHANDLED_REJECTION, onUnhandledRejection);
    }
}
exports.default = collectAppLifeCycle;
