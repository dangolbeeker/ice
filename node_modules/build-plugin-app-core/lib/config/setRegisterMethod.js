"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var getPages_1 = require("../utils/getPages");
var getRoutes_1 = require("../utils/getRoutes");
var formatPath_1 = require("../utils/formatPath");
var getSourceDir_1 = require("../utils/getSourceDir");
var constant_1 = require("../constant");
var importDeclarations_1 = require("./importDeclarations");
exports.default = (function (api, options) {
    var registerMethod = api.registerMethod;
    var generator = options.generator;
    // register utils method
    registerMethod('getPages', getPages_1.default);
    registerMethod('formatPath', formatPath_1.default);
    registerMethod('getRoutes', getRoutes_1.default);
    registerMethod('getSourceDir', getSourceDir_1.default);
    // registerMethod for modify page
    registerMethod('addPageExport', generator.addPageExport);
    registerMethod('removePageExport', generator.removePageExport);
    // registerMethod for render content
    registerMethod('addRenderFile', generator.addRenderFile);
    registerMethod('addTemplateDir', generator.addTemplateDir);
    registerMethod('modifyRenderData', generator.modifyRenderData);
    registerMethod('addDisableRuntimePlugin', generator.addDisableRuntimePlugin);
    function addImportDeclaration(data) {
        var importSource = data.importSource, exportMembers = data.exportMembers, exportDefault = data.exportDefault, alias = data.alias;
        if (importSource) {
            if (exportMembers) {
                exportMembers.forEach(function (exportMember) {
                    // import { withAuth } from 'ice' -> import { withAuth } from 'ice/auth';
                    importDeclarations_1.default[exportMember] = {
                        value: importSource,
                        type: 'normal',
                    };
                });
            }
            else if (exportDefault) {
                // import { Helmet } from 'ice' -> import Helmet from 'ice/helmet';
                importDeclarations_1.default[exportDefault] = {
                    value: importSource,
                    type: 'default',
                };
            }
            if (alias) {
                Object.keys(alias).forEach(function (exportMember) {
                    // import { Head } from 'ice'; -> import { Helmet as Head } from 'react-helmet';
                    importDeclarations_1.default[exportMember] = {
                        value: importSource,
                        type: 'normal',
                        alias: alias[exportMember],
                    };
                });
            }
        }
    }
    registerMethod('addImportDeclaration', addImportDeclaration);
    api.setValue('importDeclarations', importDeclarations_1.default);
    // registerMethod for add export
    var apiKeys = constant_1.getExportApiKeys();
    apiKeys.forEach(function (apiKey) {
        registerMethod(apiKey, function (exportData) {
            addImportDeclaration(exportData);
            generator.addExport(apiKey, exportData);
        });
        registerMethod(apiKey.replace('add', 'remove'), function (removeExportName) {
            generator.removeExport(apiKey, removeExportName);
        });
    });
    var registerAPIs = {
        addEntryImports: {
            apiKey: 'addContent',
        },
        addEntryCode: {
            apiKey: 'addContent',
        },
    };
    Object.keys(registerAPIs).forEach(function (apiName) {
        registerMethod(apiName, function (code, position) {
            if (position === void 0) { position = 'after'; }
            var apiKey = registerAPIs[apiName].apiKey;
            generator[apiKey](apiName, code, position);
        });
    });
});
