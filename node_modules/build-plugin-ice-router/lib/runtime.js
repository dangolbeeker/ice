"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
// @ts-ignore
var ErrorBoundary_1 = require("$ice/ErrorBoundary");
// @ts-ignore
var routes_1 = require("$ice/routes");
var Router_1 = require("./runtime/Router");
var formatRoutes_1 = require("./runtime/formatRoutes");
var module = function (_a) {
    var setRenderRouter = _a.setRenderRouter, appConfig = _a.appConfig, modifyRoutes = _a.modifyRoutes, wrapperRouteComponent = _a.wrapperRouteComponent, modifyRoutesComponent = _a.modifyRoutesComponent, buildConfig = _a.buildConfig, context = _a.context, createHistory = _a.createHistory;
    var _b = appConfig.router, appConfigRouter = _b === void 0 ? {} : _b, _c = appConfig.app, app = _c === void 0 ? {} : _c, renderComponent = appConfig.renderComponent;
    var ErrorBoundaryFallback = app.ErrorBoundaryFallback, onErrorBoundaryHander = app.onErrorBoundaryHander, onErrorBoundaryHandler = app.onErrorBoundaryHandler;
    // plugin-router 内置确保了 defaultRoutes 最先被添加
    modifyRoutes(function () {
        return renderComponent ? [{ component: renderComponent }] : formatRoutes_1.default(appConfigRouter.routes || routes_1.default, '');
    });
    // add default RoutesComponent
    modifyRoutesComponent(function () { return Router_1.Routes; });
    var wrapperPageErrorBoundary = function (PageComponent) {
        var _a = PageComponent.pageConfig, pageConfig = _a === void 0 ? {} : _a;
        var WrapperedPageErrorBoundary = function (props) {
            if (pageConfig.errorBoundary) {
                return (React.createElement(ErrorBoundary_1.default, { Fallback: ErrorBoundaryFallback, onError: onErrorBoundaryHandler || onErrorBoundaryHander },
                    React.createElement(PageComponent, __assign({}, props))));
            }
            return React.createElement(PageComponent, __assign({}, props));
        };
        return WrapperedPageErrorBoundary;
    };
    var wrapperPageFn = process.env.__IS_SERVER__ ? formatRoutes_1.wrapperPageWithSSR(context) : formatRoutes_1.wrapperPageWithCSR();
    wrapperRouteComponent(wrapperPageFn);
    wrapperRouteComponent(wrapperPageErrorBoundary);
    if (appConfigRouter.modifyRoutes) {
        modifyRoutes(appConfigRouter.modifyRoutes);
    }
    var renderRouter = null;
    if (renderComponent) {
        renderRouter = (function (routes) { return function () {
            var mainRoute = routes[0];
            if (mainRoute) {
                var RenderComponent = mainRoute.component;
                var initalProps = {};
                if (process.env.__IS_SERVER__) {
                    initalProps = context.initialContext || {};
                }
                return React.createElement(RenderComponent, __assign({}, initalProps));
            }
            return null;
        }; });
    }
    else {
        var lazy_1 = buildConfig && buildConfig.router && buildConfig.router.lazy;
        renderRouter = function (routes, RoutesComponent, customRouterProps) {
            if (customRouterProps === void 0) { customRouterProps = {}; }
            return function () {
                var routerProps = __assign(__assign(__assign({}, appConfigRouter), { lazy: lazy_1 }), customRouterProps);
                if (!routerProps.history) {
                    routerProps.history = createHistory({ type: appConfigRouter.type, basename: appConfigRouter.basename });
                }
                if (process.env.__IS_SERVER__) {
                    var _a = context.initialContext, initialContext = _a === void 0 ? {} : _a;
                    routerProps = Object.assign({}, routerProps, { location: initialContext.location, context: initialContext });
                }
                var fallback = routerProps.fallback, restRouterProps = __rest(routerProps, ["fallback"]);
                return (React.createElement(Router_1.IceRouter, __assign({}, restRouterProps), RoutesComponent ? React.createElement(RoutesComponent, { routes: Router_1.parseRoutes(routes, fallback), fallback: fallback }) : null));
            };
        };
    }
    setRenderRouter(renderRouter);
};
exports.default = module;
