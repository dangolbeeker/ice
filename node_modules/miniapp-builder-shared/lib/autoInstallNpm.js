"use strict";

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

var execa = require('execa');

var _require = require('ice-npm-utils'),
    checkAliInternal = _require.checkAliInternal;

var isAliInternal;
var npmRegistry;

function autoInstallNpm(_x, _x2) {
  return _autoInstallNpm.apply(this, arguments);
}

function _autoInstallNpm() {
  _autoInstallNpm = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(dir, callback) {
    return regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            if (!(isAliInternal === undefined)) {
              _context.next = 5;
              break;
            }

            _context.next = 3;
            return checkAliInternal();

          case 3:
            isAliInternal = _context.sent;
            npmRegistry = isAliInternal ? 'https://registry.npm.alibaba-inc.com' : 'https://registry.npm.taobao.org';

          case 5:
            execa('npm', ['install', '--production', "--registry=" + npmRegistry], {
              cwd: dir
            }).then(function (_ref) {
              var exitCode = _ref.exitCode;

              if (!exitCode) {
                callback();
              } else {
                console.log("\nInstall dependencies failed, please enter " + dir + " and retry by yourself\n");
                callback();
              }
            }).catch(function () {
              console.log("\nInstall dependencies failed, please enter " + dir + " and retry by yourself\n");
              callback();
            });

          case 6:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _autoInstallNpm.apply(this, arguments);
}

module.exports = autoInstallNpm;