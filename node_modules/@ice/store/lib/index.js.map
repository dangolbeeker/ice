{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport thunkMiddleware from 'redux-thunk';\nimport Icestore from './icestore';\nimport * as T from './types';\nimport mergeConfig from './utils/mergeConfig';\nimport createProviderPlugin from './plugins/provider';\nimport createReduxHooksPlugin from './plugins/reduxHooks';\nimport createModelApisPlugin from './plugins/modelApis';\nimport createImmerPlugin from './plugins/immer';\nimport createLoadingPlugin from './plugins/loading';\nimport createErrorPlugin from './plugins/error';\nimport { convertEffects, convertActions } from './utils/converter';\nimport appendReducers from './utils/appendReducers';\n\n// incrementer used to provide a store name if none exists\nlet count = 0;\n\n/**\n * createOriginStore\n *\n * generates a Icestore with a set configuration\n * @param config\n */\nconst init = <M extends T.Models>(initConfig: T.InitConfig<M> = {}): T.Icestore<M> => {\n  const name = initConfig.name || count.toString();\n  count += 1;\n  const config: T.Config = mergeConfig({ ...initConfig, name });\n  return new Icestore(config).init();\n};\n\n/**\n * createStore\n *\n * generates a preset Icestore\n * @param models\n * @param initConfig\n */\nexport const createStore = <M extends T.Models, C extends T.CreateStoreConfig<M>>(models: M, initConfig?: C): T.PresetIcestore<M> => {\n  const {\n    disableImmer,\n    disableLoading,\n    disableError,\n    plugins = [],\n    redux = {},\n  } = initConfig || {};\n  const middlewares = redux.middlewares || [];\n\n  const context = React.createContext(null);\n\n  // defaults middlewares\n  middlewares.push(thunkMiddleware);\n\n  // defaults plugins\n  plugins.push(createProviderPlugin({context}));\n  plugins.push(createReduxHooksPlugin({context}));\n  plugins.push(createModelApisPlugin());\n\n  // https://github.com/ice-lab/icestore/issues/94\n  // TODO: fix error & loading plugin immer problem\n  const immerBlacklist = [];\n  if (!disableLoading) {\n    plugins.push(createLoadingPlugin());\n    immerBlacklist.push('loading');\n  }\n  if (!disableError) {\n    plugins.push(createErrorPlugin());\n    immerBlacklist.push('error');\n  }\n  if (!disableImmer) {\n    plugins.push(createImmerPlugin({ blacklist: immerBlacklist }));\n  }\n\n  // compatibility handling\n  const wrappedModels = appendReducers(\n    convertEffects(\n      convertActions(models),\n    ),\n  );\n\n  const store = init({\n    models: wrappedModels,\n    plugins,\n    redux: {\n      ...redux,\n      middlewares,\n    },\n  });\n\n  return store as T.PresetIcestore<M>;\n};\n\ninterface MapModelToProps<M extends T.ModelConfig> {\n  (model: T.ExtractIModelAPIsFromModelConfig<M>): Record<string, any>;\n}\n\nexport const withModel = <\n  M extends T.ModelConfig,\n  F extends MapModelToProps<M>,\n  C extends T.CreateStoreConfig<{ model: M }>\n>(model: M, mapModelToProps?: F, initConfig?: C) => {\n  const modelName = 'model';\n  mapModelToProps = (mapModelToProps || ((modelApis) => ({ [modelName]: modelApis }))) as F;\n  const store = createStore({ [modelName]: model }, initConfig);\n  const { Provider, getModelAPIs } = store;\n  const modelApis = getModelAPIs(modelName);\n  const withProps = mapModelToProps(modelApis);\n  return <R extends ReturnType<F>, P extends R>(Component: React.ComponentType<P>) => {\n    return (props: T.Optionalize<P, R>): React.ReactElement => {\n      return (\n        <Provider>\n          <Component\n            {...withProps}\n            {...props as P}\n          />\n        </Provider>\n      );\n    };\n  };\n};\n\nexport default createStore;\nexport * from './types';\n"]}