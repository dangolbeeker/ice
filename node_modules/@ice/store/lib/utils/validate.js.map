{"version":3,"file":"validate.js","sourceRoot":"","sources":["../../src/utils/validate.ts"],"names":[],"mappings":";;AAEA;;;;;GAKG;AACH,IAAM,QAAQ,GAAG,UAAC,WAA2B;IAC3C,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE;QACzC,KAAyB,UAAW,EAAX,2BAAW,EAAX,yBAAW,EAAX,IAAW,EAAE;YAAjC,IAAM,UAAU,oBAAA;YACnB,IAAM,SAAS,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;YAChC,IAAM,YAAY,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;YACnC,IAAI,SAAS,EAAE;gBACb,MAAM,IAAI,KAAK,CAAC,YAAY,CAAC,CAAC;aAC/B;SACF;KACF;AACH,CAAC,CAAC;AAEF,kBAAe,QAAQ,CAAC","sourcesContent":["import * as T from '../types';\n\n/**\n * validate\n *\n * takes an array of arrays of validations and\n * throws if an error occurs\n */\nconst validate = (validations: T.Validation[]): void => {\n  if (process.env.NODE_ENV !== 'production') {\n    for (const validation of validations) {\n      const condition = validation[0];\n      const errorMessage = validation[1];\n      if (condition) {\n        throw new Error(errorMessage);\n      }\n    }\n  }\n};\n\nexport default validate;\n"]}