{"version":3,"file":"warning.js","sourceRoot":"","sources":["../../src/utils/warning.ts"],"names":[],"mappings":";;AAAA;;;;;GAKG;AACH,SAAwB,OAAO,CAAC,OAAe;IAC7C,+BAA+B;IAC/B,IAAI,OAAO,OAAO,KAAK,WAAW,IAAI,OAAO,OAAO,CAAC,KAAK,KAAK,UAAU,EAAE;QACzE,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;KACxB;IACD,8BAA8B;IAC9B,IAAI;QACF,+DAA+D;QAC/D,6CAA6C;QAC7C,6CAA6C;QAC7C,MAAM,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC;KAC1B;IAAC,OAAO,CAAC,EAAE,GAAE,CAAC,+BAA+B;AAChD,CAAC;AAZD,0BAYC","sourcesContent":["/**\n * warning\n *\n * Prints a warning in the console if it exists.\n * @param message The warning message.\n */\nexport default function warning(message: string): void {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // 'break on all exceptions' in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n  } catch (e) {} // eslint-disable-line no-empty\n}\n"]}