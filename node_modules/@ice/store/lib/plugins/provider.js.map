{"version":3,"file":"provider.js","sourceRoot":"","sources":["../../src/plugins/provider.tsx"],"names":[],"mappings":";;;;;AAAA,gDAA0B;AAC1B,2CAAwD;AAExD,+DAAyC;AAEjC,IAAA,SAAS,GAAK,qBAAW,UAAhB,CAAiB;AAMlC,mBAAe,UAAC,EAA2B;QAAzB,OAAO,aAAA;IACvB,OAAO;QACL,cAAc,EAAd,UAAe,KAAU;YACvB,IAAM,QAAQ,GAAG,UAAU,KAAK;gBACtB,IAAA,QAAQ,GAAoB,KAAK,SAAzB,EAAE,aAAa,GAAK,KAAK,cAAV,CAAW;gBAC1C,IAAI,aAAa,EAAE;oBACjB,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,UAAA,IAAI;wBACrC,IAAM,YAAY,GAAG,aAAa,CAAC,IAAI,CAAC,CAAC;wBACzC,IAAI,YAAY,IAAI,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,EAAE;4BACnD,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,YAAY,CAAC,CAAC;yBAC/C;oBACH,CAAC,CAAC,CAAC;iBACJ;gBACD,OAAO;gBACL,aAAa;gBACb,8BAAC,sBAAa,IAAC,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,IAC1C,QAAQ,CACK,CACjB,CAAC;YACJ,CAAC,CAAC;YACF,OAAO,EAAE,QAAQ,UAAA,EAAE,OAAO,SAAA,EAAE,CAAC;QAC/B,CAAC;KACF,CAAC;AACJ,CAAC,EAAC","sourcesContent":["import React from 'react';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport * as T from '../types';\nimport actionTypes from '../actionTypes';\n\nconst { SET_STATE } = actionTypes;\n\ninterface ProviderConfig {\n  context: React.Context<null>;\n}\n\nexport default ({ context }: ProviderConfig): T.Plugin => {\n  return {\n    onStoreCreated(store: any) {\n      const Provider = function (props) {\n        const { children, initialStates } = props;\n        if (initialStates) {\n          Object.keys(initialStates).forEach(name => {\n            const initialState = initialStates[name];\n            if (initialState && store.dispatch[name][SET_STATE]) {\n              store.dispatch[name][SET_STATE](initialState);\n            }\n          });\n        }\n        return (\n          // @ts-ignore\n          <ReduxProvider store={store} context={context}>\n            {children}\n          </ReduxProvider>\n        );\n      };\n      return { Provider, context };\n    },\n  };\n};\n\n"]}