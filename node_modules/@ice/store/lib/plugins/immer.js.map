{"version":3,"file":"immer.js","sourceRoot":"","sources":["../../src/plugins/immer.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,6CAA2C;AAC3C,+BAA2D;AAG3D,uBAAuB;AACvB,iBAAS,EAAE,CAAC;AAMZ,SAAS,8BAA8B,CAAC,SAAwB;IAAxB,0BAAA,EAAA,cAAwB;IAC9D,OAAO,UAAU,QAA2B;QAC1C,IAAM,iBAAiB,GAA0C,EAAE,CAAC;QACpE,gEAAgE;QAEhE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,UAAC,GAAG;YAChC,IAAM,SAAS,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC;YAChC,iBAAiB,CAAC,GAAG,CAAC,GAAG,UAAC,KAAK,EAAE,OAAO;gBACtC,OAAA,OAAO,KAAK,KAAK,QAAQ,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC;oBACnD,CAAC,CAAC,eAAO,CAAC,KAAK,EAAE,UAAC,KAAe;wBAC/B,IAAM,IAAI,GAAG,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;wBACvC,IAAI,OAAO,IAAI,KAAK,QAAQ;4BAAE,OAAO,IAAI,CAAC;oBAC5C,CAAC,CAAC;oBACF,CAAC,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC;YAL7B,CAK6B,CAAC;QAClC,CAAC,CAAC,CAAC;QAEH,OAAO,uBAAe,CAAC,iBAAiB,CAAC,CAAC;IAC5C,CAAC,CAAC;AACJ,CAAC;AAED,kBAAkB;AAClB,IAAM,WAAW,GAAG,UAAC,MAAwB;IAAxB,uBAAA,EAAA,WAAwB;IAAe,OAAA,CAAC;QAC3D,MAAM,EAAE;YACN,KAAK,EAAE;gBACL,eAAe,EAAE,8BAA8B,CAAC,MAAM,CAAC,SAAS,CAAC;aAClE;SACF;KACF,CAAC;AAN0D,CAM1D,CAAC;AAEH,kBAAe,WAAW,CAAC","sourcesContent":["import produce, { enableES5 } from 'immer';\nimport { combineReducers, ReducersMapObject } from 'redux';\nimport * as T from '../types';\n\n// make it work in IE11\nenableES5();\n\nexport interface ImmerConfig {\n  blacklist?: string[];\n}\n\nfunction createCombineReducersWithImmer(blacklist: string[] = []) {\n  return function (reducers: ReducersMapObject) {\n    const reducersWithImmer: ReducersMapObject<any, T.Action<any>> = {};\n    // reducer must return value because literal don't support immer\n\n    Object.keys(reducers).forEach((key) => {\n      const reducerFn = reducers[key];\n      reducersWithImmer[key] = (state, payload) =>\n        typeof state === 'object' && !blacklist.includes(key)\n          ? produce(state, (draft: T.Models) => {\n            const next = reducerFn(draft, payload);\n            if (typeof next === 'object') return next;\n          })\n          : reducerFn(state, payload);\n    });\n\n    return combineReducers(reducersWithImmer);\n  };\n}\n\n// icestore plugin\nconst immerPlugin = (config: ImmerConfig = {}): T.Plugin => ({\n  config: {\n    redux: {\n      combineReducers: createCombineReducersWithImmer(config.blacklist),\n    },\n  },\n});\n\nexport default immerPlugin;\n"]}