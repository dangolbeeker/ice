{"version":3,"file":"error.js","sourceRoot":"","sources":["../../src/plugins/error.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA,IAAM,YAAY,GAAG;IACnB,KAAK,EAAE,IAAI;IACX,KAAK,EAAE,CAAC;CACT,CAAC;AACF,IAAM,QAAQ,GAAG;IACf,MAAM,eACD,YAAY,CAChB;IACD,MAAM,EAAE,EAAE;IACV,OAAO,EAAE,EAAE;CACZ,CAAC;AACF,IAAM,SAAS,GAAG;IAChB,MAAM,eACD,QAAQ,CAAC,MAAM,CACnB;IACD,MAAM,eACD,QAAQ,CAAC,MAAM,CACnB;IACD,OAAO,eACF,QAAQ,CAAC,OAAO,CACpB;CACF,CAAC;AACF,SAAS,QAAQ,CAAC,KAAK;IACrB,OAAO,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;AAC/B,CAAC;AAED,IAAM,iBAAiB,GAAG,UAAC,SAAS,EAAE,CAAC,IAAK,OAAA,UAC1C,KAAK,EACL,EAAqB,EACrB,KAAY;;QADV,IAAI,UAAA,EAAE,MAAM,YAAA;IAGd,SAAS,CAAC,MAAM,GAAG;QACjB,KAAK,EAAE,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC;QAC3C,KAAK,OAAA;KACN,CAAC;IACF,IAAI,OAAO,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,WAAW,EAAE;QACjD,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,gBACjB,YAAY,CAChB,CAAC;KACH;IACD,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG;QACvB,KAAK,EAAE,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC;QACjD,KAAK,OAAA;KACN,CAAC;IACF,IAAI,OAAO,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,WAAW,EAAE;QAClD,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;KAC9B;IACD,IAAI,OAAO,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,KAAK,WAAW,EAAE;QAC1D,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,gBAC1B,YAAY,CAChB,CAAC;KACH;IACD,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,GAAG;QAChC,KAAK,EAAE,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC;QAC1D,KAAK,OAAA;KACN,CAAC;IAEF,6BACK,KAAK,KACR,MAAM,EAAE,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,EACnC,MAAM,wBACD,KAAK,CAAC,MAAM,gBACd,IAAI,IAAG,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,QAE3C,OAAO,wBACF,KAAK,CAAC,OAAO,gBACf,IAAI,0BACA,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,gBACrB,MAAM,IAAG,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,gBAGxD;AACJ,CAAC,EA9C2C,CA8C3C,CAAC;AAEF,IAAM,cAAc,GAAG,UAAA,MAAM;IAC3B,IAAI,MAAM,CAAC,IAAI,IAAI,OAAO,MAAM,CAAC,IAAI,KAAK,QAAQ,EAAE;QAClD,MAAM,IAAI,KAAK,CAAC,2CAA2C,CAAC,CAAC;KAC9D;IACD,IAAI,MAAM,CAAC,QAAQ,IAAI,OAAO,MAAM,CAAC,QAAQ,KAAK,SAAS,EAAE;QAC3D,MAAM,IAAI,KAAK,CAAC,gDAAgD,CAAC,CAAC;KACnE;IACD,IAAI,MAAM,CAAC,SAAS,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE;QACxD,MAAM,IAAI,KAAK,CACb,2DAA2D,CAC5D,CAAC;KACH;IACD,IAAI,MAAM,CAAC,SAAS,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE;QACxD,MAAM,IAAI,KAAK,CACb,2DAA2D,CAC5D,CAAC;KACH;IACD,IAAI,MAAM,CAAC,SAAS,IAAI,MAAM,CAAC,SAAS,EAAE;QACxC,MAAM,IAAI,KAAK,CACb,gEAAgE,CACjE,CAAC;KACH;AACH,CAAC,CAAC;AAEF,mBAAe,UAAC,MAAwB;IAAxB,uBAAA,EAAA,WAAwB;IACtC,cAAc,CAAC,MAAM,CAAC,CAAC;IAEvB,IAAM,cAAc,GAAG,MAAM,CAAC,IAAI,IAAI,OAAO,CAAC;IAE9C,IAAM,SAAS,GACb,MAAM,CAAC,QAAQ,KAAK,IAAI;QACtB,CAAC,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,EAAH,CAAG;QACZ,CAAC,CAAC,UAAA,GAAG,IAAI,OAAA,uBACJ,GAAG,KACN,KAAK,EAAE,GAAG,CAAC,KAAK,GAAG,CAAC,IACpB,EAHO,CAGP,CAAC;IAEP,IAAM,KAAK,GAAY;QACrB,IAAI,EAAE,cAAc;QACpB,QAAQ,EAAE;YACR,IAAI,EAAE,iBAAiB,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;YACtC,IAAI,EAAE,iBAAiB,CAAC,SAAS,EAAE,CAAC,CAAC;SACtC;QACD,KAAK,eACA,QAAQ,CACZ;KACF,CAAC;IAEF,QAAQ,CAAC,MAAM,gBACV,YAAY,CAChB,CAAC;IACF,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;IAEhD,OAAO;QACL,MAAM,EAAE;YACN,MAAM,EAAE;gBACN,KAAK,OAAA;aACN;SACF;QACD,OAAO,EAAP,UAAQ,EAAiB;YAAzB,iBA6DC;gBA7DS,IAAI,UAAA;YACZ,uCAAuC;YACvC,IAAI,IAAI,KAAK,cAAc,EAAE;gBAC3B,OAAO;aACR;YAED,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,gBAChB,YAAY,CAChB,CAAC;YACF,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;YAC5D,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;YAC/B,IAAM,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAEzC,iCAAiC;YACjC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,UAAC,MAAc;gBAC/C,IAAI,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,QAAQ,KAAK,IAAI,EAAE;oBACjD,OAAO;iBACR;gBAED,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,gBACzB,YAAY,CAChB,CAAC;gBACF,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,GAAG,SAAS,CAC3C,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAC/B,CAAC;gBAEF,IAAM,UAAU,GAAM,IAAI,SAAI,MAAQ,CAAC;gBAEvC,gCAAgC;gBAChC,IAAI,MAAM,CAAC,SAAS,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE;oBAC9D,OAAO;iBACR;gBAED,4BAA4B;gBAC5B,IAAI,MAAM,CAAC,SAAS,IAAI,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE;oBAC7D,OAAO;iBACR;gBAED,2BAA2B;gBAC3B,IAAM,UAAU,GAAG,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC;gBAE/C,8CAA8C;gBAC9C,IAAM,aAAa,GAAG;oBAAO,eAAQ;yBAAR,UAAQ,EAAR,qBAAQ,EAAR,IAAQ;wBAAR,0BAAQ;;;;;;;oCACnC,yCAAyC;oCACzC,IAAI,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,IAAI,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE;wCACvG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI,MAAA,EAAE,MAAM,QAAA,EAAE,EAAE,IAAI,CAAC,CAAC;qCAClD;;;;oCAEQ,qBAAM,UAAU,eAAI,KAAK,GAAC;wCAAjC,sBAAO,SAA0B,EAAC;;;oCAElC,2BAA2B;oCAC3B,OAAO,CAAC,KAAK,CAAC,OAAK,CAAC,CAAC;oCACrB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI,MAAA,EAAE,MAAM,QAAA,EAAE,EAAE,OAAK,CAAC,CAAC;;;;;;iBAErD,CAAC;gBAEF,aAAa,CAAC,QAAQ,GAAG,IAAI,CAAC;gBAE9B,2CAA2C;gBAC3C,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,GAAG,aAAa,CAAC;YAC9C,CAAC,CAAC,CAAC;QACL,CAAC;KACF,CAAC;AACJ,CAAC,EAAC","sourcesContent":["import React from 'react';\nimport * as T from '../types';\n\nexport interface ErrorConfig {\n  name?: string;\n  whitelist?: string[];\n  blacklist?: string[];\n  asNumber?: boolean;\n}\n\ninterface IErrorState {\n  error: Error;\n  value: boolean;\n}\n\nexport interface ErrorState<M extends T.Models> {\n  error: {\n    global: IErrorState;\n    models: { [modelName in keyof M]: IErrorState };\n    effects: {\n      [modelName in keyof M]: {\n        [effectName in keyof T.ExtractIModelDispatchersFromEffects<\n        M[modelName]['effects']\n        >]: IErrorState\n      }\n    };\n  };\n}\n\nconst defaultValue = {\n  error: null,\n  value: 0,\n};\nconst cntState = {\n  global: {\n    ...defaultValue,\n  },\n  models: {},\n  effects: {},\n};\nconst nextState = {\n  global: {\n    ...cntState.global,\n  },\n  models: {\n    ...cntState.models,\n  },\n  effects: {\n    ...cntState.effects,\n  },\n};\nfunction fallback(value) {\n  return value < 0 ? 0 : value;\n}\n\nconst createErrorAction = (converter, i) => (\n  state,\n  { name, action }: any,\n  error: Error,\n) => {\n  nextState.global = {\n    value: fallback(nextState.global.value + i),\n    error,\n  };\n  if (typeof nextState.models[name] === 'undefined') {\n    nextState.models[name] = {\n      ...defaultValue,\n    };\n  }\n  nextState.models[name] = {\n    value: fallback(nextState.models[name].value + i),\n    error,\n  };\n  if (typeof nextState.effects[name] === 'undefined') {\n    nextState.effects[name] = {};\n  }\n  if (typeof nextState.effects[name][action] === 'undefined') {\n    nextState.effects[name][action] = {\n      ...defaultValue,\n    };\n  }\n  nextState.effects[name][action] = {\n    value: fallback(nextState.effects[name][action].value + i),\n    error,\n  };\n\n  return {\n    ...state,\n    global: converter(nextState.global),\n    models: {\n      ...state.models,\n      [name]: converter(nextState.models[name]),\n    },\n    effects: {\n      ...state.effects,\n      [name]: {\n        ...state.effects[name],\n        [action]: converter(nextState.effects[name][action]),\n      },\n    },\n  };\n};\n\nconst validateConfig = config => {\n  if (config.name && typeof config.name !== 'string') {\n    throw new Error('error plugin config name must be a string');\n  }\n  if (config.asNumber && typeof config.asNumber !== 'boolean') {\n    throw new Error('error plugin config asNumber must be a boolean');\n  }\n  if (config.whitelist && !Array.isArray(config.whitelist)) {\n    throw new Error(\n      'error plugin config whitelist must be an array of strings',\n    );\n  }\n  if (config.blacklist && !Array.isArray(config.blacklist)) {\n    throw new Error(\n      'error plugin config blacklist must be an array of strings',\n    );\n  }\n  if (config.whitelist && config.blacklist) {\n    throw new Error(\n      'error plugin config cannot have both a whitelist & a blacklist',\n    );\n  }\n};\n\nexport default (config: ErrorConfig = {}): T.Plugin => {\n  validateConfig(config);\n\n  const errorModelName = config.name || 'error';\n\n  const converter =\n    config.asNumber === true\n      ? cnt => cnt\n      : cnt => ({\n        ...cnt,\n        value: cnt.value > 0,\n      });\n\n  const error: T.Model = {\n    name: errorModelName,\n    reducers: {\n      hide: createErrorAction(converter, -1),\n      show: createErrorAction(converter, 1),\n    },\n    state: {\n      ...cntState,\n    },\n  };\n\n  cntState.global = {\n    ...defaultValue,\n  };\n  error.state.global = converter(cntState.global);\n\n  return {\n    config: {\n      models: {\n        error,\n      },\n    },\n    onModel({ name }: T.Model) {\n      // do not run dispatch on 'error' model\n      if (name === errorModelName) {\n        return;\n      }\n\n      cntState.models[name] = {\n        ...defaultValue,\n      };\n      error.state.models[name] = converter(cntState.models[name]);\n      error.state.effects[name] = {};\n      const modelActions = this.dispatch[name];\n\n      // map over effects within models\n      Object.keys(modelActions).forEach((action: string) => {\n        if (this.dispatch[name][action].isEffect !== true) {\n          return;\n        }\n\n        cntState.effects[name][action] = {\n          ...defaultValue,\n        };\n        error.state.effects[name][action] = converter(\n          cntState.effects[name][action],\n        );\n\n        const actionType = `${name}/${action}`;\n\n        // ignore items not in whitelist\n        if (config.whitelist && !config.whitelist.includes(actionType)) {\n          return;\n        }\n\n        // ignore items in blacklist\n        if (config.blacklist && config.blacklist.includes(actionType)) {\n          return;\n        }\n\n        // copy orig effect pointer\n        const origEffect = this.dispatch[name][action];\n\n        // create function with pre & post error calls\n        const effectWrapper = async (...props) => {\n          // only clear when there has been a error\n          if (nextState.effects[name] && nextState.effects[name][action] && nextState.effects[name][action].error) {\n            this.dispatch.error.hide({ name, action }, null);\n          }\n          try {\n            return await origEffect(...props);\n          } catch (error) {\n            // display error on console\n            console.error(error);\n            this.dispatch.error.show({ name, action }, error);\n          }\n        };\n\n        effectWrapper.isEffect = true;\n\n        // replace existing effect with new wrapper\n        this.dispatch[name][action] = effectWrapper;\n      });\n    },\n  };\n};\n"]}